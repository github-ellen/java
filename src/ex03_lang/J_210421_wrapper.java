package ex03_lang;

public class J_210421_wrapper {

	public static void main(String[] args) {
		//레퍼 클래스 : 감싸는 클래스
//		int a =20;
//		//정수를 문자열로 변환하는 방법
//		//String.valueOf(a)
//		System.out.println(String.valueOf(a));
//		System.out.println(String.valueOf(a)+100); //문자 취급하기 때문에.
//		
//		String s = "10";
//		//String s1 = "sea";
//		
//		System.out.println(s + 100);
//		//문자열을 숫자로 변환하는 방법
//		//Integer.parseInt(s)
//		System.out.println("S : " + Integer.parseInt(s)+100); //기본형으로 반환해줌
//		System.out.println("S : " + Integer.valueOf(s)+100); 
//		//System.out.println(Integer.parseInt(s1)+100); 오류남요
//		
//		double d = 7.45;
//		int aa = (int)d;
//		System.out.println(aa);
		
		//valueOf, parseInt 들을 래퍼 클래스라고 부른다.
		//가본 자료형들을 객체로 다루기 위해서 사용하는 클래스가 래퍼클래스
		
		//Integer a = 10; //이것은 래퍼 클래스. 객체를 만들고 그 안에 필드 값을 10으로 지정
						//스택이라는 영역에 Integer a 생성. a는 주소값을 가지고 있다.
//		Integer c = new Integer(10); 선이 그어진 표시는 되도록 사용하지 말라는 얘기(호환성 문제)
//		System.out.println(c);
//		int b = a; //오토박싱(int -> Integer), 언박싱(Integer -> int)
//		System.out.println(a+b);

//		
//		//2진수 변환
//		//3(10) -> ?(2)
//		int a = 3;
//		System.out.println(Integer.toBinaryString(a));
//		int b = 16;
//		System.out.println(Integer.toBinaryString(b));
//		int c = 255;
//		System.out.println(Integer.toBinaryString(c));
		
//		//Boolean 클래스
//		String s = "TRUE";
//		//문자열을 true 나 false 로 바꾸고 싶다면
//		System.out.println(Boolean.parseBoolean(s));
//		
//		String s1 = "happy";
//		System.out.println(Boolean.parseBoolean(s1));
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	}

}
